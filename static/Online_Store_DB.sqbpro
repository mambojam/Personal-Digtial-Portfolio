<?xml version="1.0" encoding="UTF-8"?><sqlb_project><db path="C:/Users/c1755302/OneDrive - Cardiff University/Documents/CMT120 - Fundamentals of Programming/Assignment 2/Test/static/Online_Store_DB.db" readonly="0" foreign_keys="1" case_sensitive_like="0" temp_store="0" wal_autocheckpoint="1000" synchronous="2"/><attached/><window><main_tabs open="structure browser pragmas query" current="3"/></window><tab_structure><column_width id="0" width="300"/><column_width id="1" width="0"/><column_width id="2" width="150"/><column_width id="3" width="1113"/><column_width id="4" width="0"/><expanded_item id="0" parent="1"/><expanded_item id="1" parent="1"/><expanded_item id="2" parent="1"/><expanded_item id="3" parent="1"/></tab_structure><tab_browse><current_table name="4,7:mainProduct"/><default_encoding codec=""/><browse_table_settings/></tab_browse><tab_sql><sql name="SQL 1">CREATE TABLE Product(
    product_id INT PRIMARY KEY AUTOINCREMENT,
    product_name TEXT,
    category TEXT(10),
    price DECIMAL
);


UPDATE Product
SET product_id INT AUTO_INCREMENT;

INSERT INTO Product VALUES(1, 'Scarpa_Vapour_S', 'Rock_Shoe', 125.00);
INSERT INTO Product VALUES(2, 'Scarpa_Quantix_SF', 'Rock_Shoe', 105.00);
INSERT INTO Product VALUES(3, 'Scarpa_Mago', 'Rock_Shoe', 99.00);
INSERT INTO Product VALUES(4, 'La_Sportiva_TC_Pro', 'Rock_Shoe', 155.00);
INSERT INTO Product VALUES(5, 'La_Sportiva_Skwama', 'Rock_Shoe', 130.00);
INSERT INTO Product VALUES(6, 'La_Sportiva_Miura_Lace', 'Rock_Shoe', 127.00);
INSERT INTO Product VALUES(7, 'Mammut_9.5MM_50M', 'Rope', 112.00);
INSERT INTO Product VALUES(8, 'Edelweiss_9.2MM_70M', 'Rope', 212.00);
INSERT INTO Product VALUES(9, 'Edelrid_Eco_50M', 'Rope', 157.50);
INSERT INTO Product VALUES(10, 'Beal_Phantom', 'Harness', 54.00);
INSERT INTO Product VALUES(11, 'DMM_Centre', 'Harness', 58.50);
INSERT INTO Product VALUES(11, 'DMM_Centre', 'Harness', 58.50);
INSERT INTO Product VALUES(12, 'Ocun_Webee_Bigwall', 'Harness', 85.50);
INSERT INTO Product VALUES(13, 'Mammut_Bionic_5_Pack', 'Quickdraw', 82.50);
INSERT INTO Product VALUES(14, 'Black_Diamond_6_Pack', 'Quickdraw', 85.50);
INSERT INTO Product VALUES(15, 'DMM_Alpha_6_Pack', 'Quickdraw', 128.00);


SELECT * FROM Customer;

CREATE TABLE Customer(
    customer_id INT PRIMARY KEY,
    first_name VARCHAR (20),
    last_name VARCHAR (20),
    email VARCHAR (30),
    phone CHAR(11)
);

DROP TABLE Customer;

CREATE TABLE Customer(
    customer_id INT PRIMARY KEY AUTO_INCREMENT,
    first_name VARCHAR (20),
    last_name VARCHAR (20),
    email VARCHAR (30),
    phone CHAR(11)
);



ALTER TABLE Customer
    ADD CONSTRAINT unique_email UNIQUE (email);

ALTER TABLE Customer
    ADD CONSTRAINT unique_phone UNIQUE (phone);

INSERT INTO Customer VALUES(1, 'Zoe', 'Hall', 'zoebigtits@outlook.com', '07899696969');
INSERT INTO Customer (first_name, last_name, email, phone) VALUES('Naomi', 'Hughes', 'labnomes@science.com', '07891692345');
INSERT INTO Customer (first_name, last_name, email, phone) VALUES('Tom', 'Davies', 'tommy_d@ironfingers.com', '07619873456');
INSERT INTO Customer (first_name, last_name, email, phone) VALUES('Rachel', 'Foster', 'rachlikesplants@house.com', '07425601234');
INSERT INTO Customer (first_name, last_name, email, phone) VALUES('Alex', 'Dickinson', 'bigdickal@wopper.com', '07545888888');
INSERT INTO Customer (first_name, last_name, email, phone) VALUES('Andy', 'Laird', 'andypandy@shandymandy.com', '07444222333');
INSERT INTO Customer (first_name, last_name, email, phone) VALUES('Damiel', 'Skerman', 'skermanator3000sucks@magic.com', '07445692345');

CREATE TABLE `Order`(
    order_id INT PRIMARY KEY AUTO_INCREMENT,
    customer_id INT,
    order_date DATE
);

SELECT * FROM `Order`;
INSERT INTO `Order` (customer_id, order_date) VALUES (1, '2023-01-02');
INSERT INTO `Order` (customer_id, order_date) VALUES (2, '2023-01-05');
INSERT INTO `Order` (customer_id, order_date) VALUES (3, '2023-01-09');
INSERT INTO `Order` (customer_id, order_date) VALUES (7, '2023-01-09');
INSERT INTO `Order` (customer_id, order_date) VALUES (4, '2023-01-11');
INSERT INTO `Order` (customer_id, order_date) VALUES (6, '2023-01-20');
INSERT INTO `Order` (customer_id, order_date) VALUES (1, '2023-01-30');
INSERT INTO `Order` (customer_id, order_date) VALUES (1, '2023-02-04');
INSERT INTO `Order` (customer_id, order_date) VALUES (2, '2023-02-04');
INSERT INTO `Order` (customer_id, order_date) VALUES (3, '2023-02-04');
INSERT INTO `Order` (customer_id, order_date) VALUES (4, '2023-02-04');
INSERT INTO `Order` (customer_id, order_date) VALUES (5, '2023-02-04');
INSERT INTO `Order` (customer_id, order_date) VALUES (6, '2023-02-04');
INSERT INTO `Order` (customer_id, order_date) VALUES (7, '2023-02-04');
INSERT INTO `Order` (customer_id, order_date) VALUES (5, '2023-02-28');
INSERT INTO `Order` (customer_id, order_date) VALUES (1, '2023-03-04');
INSERT INTO `Order` (customer_id, order_date) VALUES (1, '2023-03-14');
INSERT INTO `Order` (customer_id, order_date) VALUES (5, '2023-03-24');
INSERT INTO `Order` (customer_id, order_date) VALUES (2, '2023-04-10');
INSERT INTO `Order` (customer_id, order_date) VALUES (4, '2023-04-10');
INSERT INTO `Order` (customer_id, order_date) VALUES (6, '2023-04-10');
INSERT INTO `Order` (customer_id, order_date) VALUES (2, '2023-04-14');
INSERT INTO `Order` (customer_id, order_date) VALUES (3, '2023-05-11');

ALTER TABLE order_item
ADD CONSTRAINT unique_order_id UNIQUE (order_id);

ALTER TABLE order_item
MODIFY order_id INT AUTO_INCREMENT;

CREATE TABLE Order_Item(
    order_id INT,
    product_id INT,
    quantity INT,
    subtotal DECIMAL
);

UPDATE order_item
SET subtotal = price * quantity
FROM product
WHERE order_item.product_id = product.product_id; -- this doesn't work in MySQL but would work in SQLServer

UPDATE order_item
JOIN product ON order_item.product_id = product.product_id
SET order_item.subtotal = product.price * order_item.quantity; -- this should give us the automated calculation of price from product by quantity in orderitem


INSERT INTO Order_Item (product_id, quantity) VALUES (1, 3);
INSERT INTO Order_Item (product_id, quantity) VALUES (4, 1);
INSERT INTO Order_Item (product_id, quantity) VALUES (6, 2);
INSERT INTO Order_Item (product_id, quantity) VALUES (1, 9);
INSERT INTO Order_Item (product_id, quantity) VALUES (9, 1);
INSERT INTO Order_Item (product_id, quantity) VALUES (3, 2);


SELECT * FROM order_item;

--QUERIES
--1.Retrieve a list of products in a specific category.

SELECT product_name
FROM product
WHERE category = 'Rock_Shoe';

--5. Calculate the total sales for each product.

SELECT p.product_name, SUM(p.price * oi.quantity)
FROM product AS p
JOIN order_item AS oi ON p.product_id = oi.product_id
GROUP BY product_name;

--6. Find the customer who placed the most orders. ## REDO THIS ONE!!

SELECT CONCAT(c.first_name, ' ', c.last_name) AS customer_name, COUNT(o.order_id) AS total_orders
FROM customer AS c
JOIN `order` AS o ON c.customer_id = o.customer_id
GROUP BY c.customer_id
ORDER BY total_orders DESC
LIMIT 1;

--7. Calculate the average quantity of items per order.

SELECT AVG(quantity)
FROM order_item;

--8. List the top-selling products.

SELECT p.product_name, SUM(oi.quantity) AS number_sold -- interesting ** swapping COUNT for SUM here counts the number of orders/number of times a quantity is associated with this product_id so we need a SUM instead
FROM product AS p
JOIN order_item AS oi ON p.product_id = oi.product_id
GROUP BY p.product_id
ORDER BY number_sold DESC
LIMIT 5;

--9. Retrieve orders placed by a specific customer.

SELECT *
FROM `order`
WHERE customer_id = 3;

SELECT o.*, CONCAT(c.first_name, ' ', c.last_name) AS Customer_Name
FROM `order` AS o
JOIN customer AS c ON o.customer_id = c.customer_id
WHERE c.customer_id = 3;

SELECT o.*, CONCAT(c.first_name, ' ', c.last_name) AS Customer_Name
FROM `order` AS o
JOIN customer AS c ON o.customer_id = c.customer_id
ORDER BY Customer_Name;

--10. Calculate the total revenue generated from sales.

SELECT SUM(subtotal) AS revenue
FROM order_item;

--11. List the customers who have not placed any orders.

SELECT c.customer_id, COUNT(o.order_id) AS total_orders
FROM customer AS c
LEFT JOIN `order` AS o ON c.customer_id = o.customer_id
GROUP BY c.customer_id
HAVING total_orders = 0;
--Challenges
--1. Joining tables to retrieve information that involves multiple tables.
--2. Aggregating data to calculate totals, averages, and counts.
--3. Using subqueries to solve complex problems.
--4. Writing SQL statements for various data manipulation tasks

ALTER TABLE `order`
ADD INDEX idx_order_id_not_null (order_id);

SELECT * FROM `order`;

</sql><sql name="Products">CREATE TABLE Product(
    product_id INTEGER PRIMARY KEY AUTOINCREMENT,
    product_name VARCHAR(30),
    category VARCHAR(12),
    price DECIMAL
);

INSERT INTO Product(product_name, category, price) VALUES('Scarpa_Vapour_S', 'Rock_Shoe', 125.00);
INSERT INTO Product(product_name, category, price) VALUES('Scarpa_Quantix_SF', 'Rock_Shoe', 105.00);
INSERT INTO Product(product_name, category, price) VALUES('Scarpa_Mago', 'Rock_Shoe', 99.00);
INSERT INTO Product(product_name, category, price) VALUES('La_Sportiva_TC_Pro', 'Rock_Shoe', 155.00);
INSERT INTO Product(product_name, category, price) VALUES('La_Sportiva_Skwama', 'Rock_Shoe', 130.00);
INSERT INTO Product(product_name, category, price) VALUES('La_Sportiva_Miura_Lace', 'Rock_Shoe', 127.00);
INSERT INTO Product(product_name, category, price) VALUES('Mammut_9.5MM_50M', 'Rope', 112.00);
INSERT INTO Product(product_name, category, price) VALUES('Edelweiss_9.2MM_70M', 'Rope', 212.00);
INSERT INTO Product(product_name, category, price) VALUES('Edelrid_Eco_50M', 'Rope', 157.50);
INSERT INTO Product(product_name, category, price) VALUES('Beal_Phantom', 'Harness', 54.00);
INSERT INTO Product(product_name, category, price) VALUES('DMM_Centre', 'Harness', 58.50);
INSERT INTO Product(product_name, category, price) VALUES('DMM_Centre', 'Harness', 58.50);
INSERT INTO Product(product_name, category, price) VALUES('Ocun_Webee_Bigwall', 'Harness', 85.50);
INSERT INTO Product(product_name, category, price) VALUES('Mammut_Bionic_5_Pack', 'Quickdraw', 82.50);
INSERT INTO Product(product_name, category, price) VALUES('Black_Diamond_6_Pack', 'Quickdraw', 85.50);
INSERT INTO Product(product_name, category, price) VALUES('DMM_Alpha_6_Pack', 'Quickdraw', 128.00);
</sql><sql name="Customers">
CREATE TABLE Customer(
    customer_id INTEGER PRIMARY KEY AUTOINCREMENT,
    first_name VARCHAR (20),
    last_name VARCHAR (20),
    email VARCHAR(30) UNIQUE,
    phone CHAR(11) UNIQUE 
);

INSERT INTO Customer (first_name, last_name, email, phone) VALUES('Zoe', 'Hall', 'zoebigtits@outlook.com', '07899696969');
INSERT INTO Customer (first_name, last_name, email, phone) VALUES('Naomi', 'Hughes', 'labnomes@science.com', '07891692345');
INSERT INTO Customer (first_name, last_name, email, phone) VALUES('Tom', 'Davies', 'tommy_d@ironfingers.com', '07619873456');
INSERT INTO Customer (first_name, last_name, email, phone) VALUES('Rachel', 'Foster', 'rachlikesplants@house.com', '07425601234');
INSERT INTO Customer (first_name, last_name, email, phone) VALUES('Owen', 'Payne', 'odog@boulders.co.uk', '07545888888');
INSERT INTO Customer (first_name, last_name, email, phone) VALUES('Andy', 'Laird', 'andypandy@shandymandy.com', '07444222333');
INSERT INTO Customer (first_name, last_name, email, phone) VALUES('Daniel', 'Skerman', 'skermanator3000sucks@magic.com', '07445692345');
</sql><sql name="Orders">CREATE TABLE `Order`(
    order_id INTEGER PRIMARY KEY AUTOINCREMENT,
    customer_id INTEGER,
    order_date DATE
);

INSERT INTO `Order` (customer_id, order_date) VALUES (1, '2023-01-02');
INSERT INTO `Order` (customer_id, order_date) VALUES (2, '2023-01-05');
INSERT INTO `Order` (customer_id, order_date) VALUES (3, '2023-01-09');
INSERT INTO `Order` (customer_id, order_date) VALUES (7, '2023-01-09');
INSERT INTO `Order` (customer_id, order_date) VALUES (4, '2023-01-11');
INSERT INTO `Order` (customer_id, order_date) VALUES (6, '2023-01-20');
INSERT INTO `Order` (customer_id, order_date) VALUES (1, '2023-01-30');
INSERT INTO `Order` (customer_id, order_date) VALUES (1, '2023-02-04');
INSERT INTO `Order` (customer_id, order_date) VALUES (2, '2023-02-04');
INSERT INTO `Order` (customer_id, order_date) VALUES (3, '2023-02-04');
INSERT INTO `Order` (customer_id, order_date) VALUES (4, '2023-02-04');
INSERT INTO `Order` (customer_id, order_date) VALUES (5, '2023-02-04');
INSERT INTO `Order` (customer_id, order_date) VALUES (6, '2023-02-04');
INSERT INTO `Order` (customer_id, order_date) VALUES (7, '2023-02-04');
INSERT INTO `Order` (customer_id, order_date) VALUES (5, '2023-02-28');
INSERT INTO `Order` (customer_id, order_date) VALUES (1, '2023-03-04');
INSERT INTO `Order` (customer_id, order_date) VALUES (1, '2023-03-14');
INSERT INTO `Order` (customer_id, order_date) VALUES (5, '2023-03-24');
INSERT INTO `Order` (customer_id, order_date) VALUES (2, '2023-04-10');
INSERT INTO `Order` (customer_id, order_date) VALUES (4, '2023-04-10');
INSERT INTO `Order` (customer_id, order_date) VALUES (6, '2023-04-10');
INSERT INTO `Order` (customer_id, order_date) VALUES (2, '2023-04-14');
INSERT INTO `Order` (customer_id, order_date) VALUES (3, '2023-05-11');

</sql><sql name="Order-Item">-- CREATE TABLE Order_Item(
--     order_id INT,
--     product_id INT,
--     quantity INT,
--     subtotal DECIMAL
-- );

UPDATE order_item
SET subtotal = (
	SELECT product.price * order_item.quantity
	FROM product
	WHERE product.product_id = order_item.product_id
);

INSERT INTO Order_Item (order_id, product_id, quantity) VALUES (1, 1, 3);
INSERT INTO Order_Item (order_id, product_id, quantity) VALUES (1, 4, 1);
INSERT INTO Order_Item (order_id, product_id, quantity) VALUES (2, 16, 2);
INSERT INTO Order_Item (order_id, product_id, quantity) VALUES (3, 1, 9);
INSERT INTO Order_Item (order_id, product_id, quantity) VALUES (3, 9, 1);
INSERT INTO Order_Item (order_id, product_id, quantity) VALUES (3, 3, 2);
INSERT INTO Order_Item (order_id, product_id, quantity) VALUES (4, 2, 3);
INSERT INTO Order_Item (order_id, product_id, quantity) VALUES (4, 11, 1);
INSERT INTO Order_Item (order_id, product_id, quantity) VALUES (4, 6, 2);
INSERT INTO Order_Item (order_id, product_id, quantity) VALUES (4, 4, 9);
INSERT INTO Order_Item (order_id, product_id, quantity) VALUES (5, 15, 1);
INSERT INTO Order_Item (order_id, product_id, quantity) VALUES (6, 7, 3);
INSERT INTO Order_Item (order_id, product_id, quantity) VALUES (7, 6, 2);
INSERT INTO Order_Item (order_id, product_id, quantity) VALUES (8, 3, 2);
INSERT INTO Order_Item (order_id, product_id, quantity) VALUES (9, 11, 2);
INSERT INTO Order_Item (order_id, product_id, quantity) VALUES (10, 17, 2);
INSERT INTO Order_Item (order_id, product_id, quantity) VALUES (11, 1, 5);
INSERT INTO Order_Item (order_id, product_id, quantity) VALUES (12, 2, 2);
INSERT INTO Order_Item (order_id, product_id, quantity) VALUES (13, 3, 2);
INSERT INTO Order_Item (order_id, product_id, quantity) VALUES (14, 9, 1);
INSERT INTO Order_Item (order_id, product_id, quantity) VALUES (14, 7, 2);
INSERT INTO Order_Item (order_id, product_id, quantity) VALUES (15, 5, 2);
INSERT INTO Order_Item (order_id, product_id, quantity) VALUES (16, 3, 2);
INSERT INTO Order_Item (order_id, product_id, quantity) VALUES (16, 3, 2);
INSERT INTO Order_Item (order_id, product_id, quantity) VALUES (17, 3, 2);
INSERT INTO Order_Item (order_id, product_id, quantity) VALUES (18, 3, 2);
INSERT INTO Order_Item (order_id, product_id, quantity) VALUES (19, 3, 2);
INSERT INTO Order_Item (order_id, product_id, quantity) VALUES (20, 3, 2);
INSERT INTO Order_Item (order_id, product_id, quantity) VALUES (21, 3, 2);
INSERT INTO Order_Item (order_id, product_id, quantity) VALUES (22, 1, 2);



</sql><sql name="Queries">SELECT c.first_name || &quot; &quot; || c.last_name AS &quot;Customer Name&quot;, count(`Order`.order_id) AS &quot;Number of Orders&quot;
FROM Customer as C
INNER JOIN `Order` ON c.customer_id = `Order`.customer_id
GROUP BY c.customer_id
ORDER BY count(`Order`.order_id) DESC</sql><current_tab id="5"/></tab_sql></sqlb_project>
